{"version":3,"sources":["components/enroll/enroll.module.css","components/navbar/navbar.module.css","components/classList/classList.module.css","components/subject/subject.module.css","components/home/home.module.css","components/login/login.jsx","components/navbar/navbar.jsx","components/home/home.jsx","components/enroll/enrollpost.jsx","components/enroll/enroll.jsx","components/post/post.jsx","components/subject/subject.jsx","components/classList/classList.jsx","app.jsx","service/firebase.js","index.js","components/post/post.module.css"],"names":["module","exports","Login","firebase","typte","onClick","e","googleLogin","Navbar","title","user","history","useHistory","navbar","useRef","logout","useEffect","current","style","visibility","className","styles","navbarContainer","ref","position","btnBox","push","backPageBtn","navbarTitle","logoutBtn","googleLogout","then","alert","Home","handleCheckUserId","uid","setRef","setDatabaseRef","child","onDatabase","data","exists","setUserIdEnroll","setDatabase","enroll_chance","msg","console","log","mainContainer","loginBox","credential","EnrollPost","path","post","member","maxMember","useState","checkId","setCheckId","count","setCount","postUser","setPostUser","show","setShow","readRef","enroll","val","postRef","display","userNameValue","campusValue","yearValue","setEnrollUser","userName","campus","year","item","clickBtn","updateEnrollChance","select","updataRef","updateDatabase","postBox","type","placeholder","value","removeDatabase","memberRef","Enroll","setMember","setPost","numChildren","enrollContainer","subjectBox","titleBox","subTitle","speaker","discriptionBox","discription","Post","sperker","inputList","input","name","labels","textarea","cols","rows","titleData","sperkerData","discriptionData","maxMemberData","postUserData","subjectWriteData","goBack","Subject","Object","keys","length","contentBox","subtitleBox","ClassList","list","setList","subject","entries","onHandleEnroll","classListContainer","classListBox","map","subjectRegiste","App","userId","setUserId","setPath","setItem","authObserver","exact","Firebase","initializeApp","apiKey","process","authDomain","projectId","appId","measurementId","databaseURL","storageBucket","provider","auth","GoogleAuthProvider","signInWithPopup","signOut","onAuthStateChanged","database","Promise","resolve","reject","set","remove","on","snapshot","update","Number","firebaseInit","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1fa463b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enrollContainer\":\"enroll_enrollContainer__1a9dx\",\"subjectBox\":\"enroll_subjectBox__3_t28\",\"titleBox\":\"enroll_titleBox__1y6yr\",\"subTitle\":\"enroll_subTitle___BTJA\",\"discriptionBox\":\"enroll_discriptionBox__3pL1q\",\"postBox\":\"enroll_postBox__2gorZ\",\"btnBox\":\"enroll_btnBox__37xN0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbarContainer\":\"navbar_navbarContainer__KEhRf\",\"navbarTitle\":\"navbar_navbarTitle__2EVqJ\",\"btnBox\":\"navbar_btnBox__13yFq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"classListContainer\":\"classList_classListContainer__1la2P\",\"classListBox\":\"classList_classListBox__2S1z0\",\"btnBox\":\"classList_btnBox__1ylSb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentBox\":\"subject_contentBox__1_y3U\",\"titleBox\":\"subject_titleBox___GfjI\",\"subtitleBox\":\"subject_subtitleBox__3qcSz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"home_mainContainer__2Z7uj\"};","import React from 'react';\n\nconst Login = ({firebase}) => {\n  \n  const handleGoogleLogin = (e) => {\n    firebase.googleLogin();\n  }\n\n  return (\n    <>\n      <h1>로그인 페이지입니다.</h1>\n      <button typte=\"button\" onClick={handleGoogleLogin}>gogleLogin</button>\n    </>\n  )\n}\n\nexport default Login;","import React, { useRef } from 'react';\n// import { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styles from './navbar.module.css';\n\n// const useScroll = () => {\n//   const [status, setStatus] = useState({\n//     scrollY: 0,\n//     scrollX: 0,\n//   });\n//   const handler = () => {\n//     setStatus({\n//       scrollY: window.scrollY,\n//       scrollX: window.scrollX,\n//     })\n//   };\n//   useEffect(() => {\n//     window.addEventListener(\"scroll\", handler);\n//     return () => window.removeEventListener(\"scroll\",handler);\n//   }, []);\n\n//   return status;\n// };\n\nconst Navbar = ({title, firebase, user}) => {\n\n  // const [rect, setRect] = useState([]);\n  // const [styleNavbar, setStyleNavbar] = useState({});\n  // const { scrollY } = useScroll();\n  const history = useHistory();\n  const navbar = useRef();\n  const logout = useRef();\n  \n  useEffect(()=>{\n    // setRect(navbar.current.getBoundingClientRect())\n    if(!user){\n      logout.current.style.visibility = \"hidden\";\n      \n      return;\n    }\n    else{\n      logout.current.style.visibility = \"visible\";\n      return;\n    }\n  }, [user])\n  \n  const handleLogout = () =>{\n      firebase.googleLogout()\n        .then(() => {\n          alert('로그아웃 되었습니다');\n        })\n  }\n\n  const handleBackPage = () => {\n    history.push('/class-list');\n  }\n  \n\n  return (\n    <>\n      <section className={styles.navbarContainer} ref={navbar} style={{position : 'fixed'}}>\n        <span className={styles.btnBox}>\n          <button onClick={handleBackPage} className={styles.backPageBtn}> 뒤로 </button>\n        </span>\n        <h1 className={styles.navbarTitle}>{title}</h1>\n        <span className={styles.btnBox}>\n          <button className={styles.logoutBtn} onClick={handleLogout} ref={logout}>Logout</button>\n        </span>\n      </section>\n    </>\n  )\n}\nexport default Navbar;","import React from 'react';\nimport Navbar from '../navbar/navbar';\nimport styles from './home.module.css';\n\nconst Home = ({firebase}) => {\n\n  const handleGoogleLogin = () => {\n    firebase.googleLogin()\n      .then((credential) => {\n        handleCheckUserId(credential.user.uid);\n      })\n  }\n\n  const handleCheckUserId = (uid) => {\n    const setRef = firebase.setDatabaseRef('user').child(uid);\n    firebase.onDatabase(setRef)\n      .then((data) => {\n        if(data.exists()){\n          return;\n        }\n        setUserIdEnroll(uid);\n      })\n  }\n\n  const setUserIdEnroll = (uid) => {\n    const setRef = firebase.setDatabaseRef('user').child(uid);\n    const item = {\n      enroll_chance : 2,\n    }\n    firebase.setDatabase(setRef, item)\n      .then((msg) => console.log(msg));\n  }\n\n  return(\n    <>\n    <Navbar />\n      <section className={styles.mainContainer}>\n        <span>청주지구 선택특강에 오신</span>\n        <span>여러분을 환영합니다.</span>\n        <div className={styles.loginBox}>\n          <h3>아래의 버튼을 통해서 로그인을 해야합니다.</h3>\n        </div>\n        <button onClick={handleGoogleLogin}>구글로 로그인 하기</button>\n      </section>\n    </>\n  )\n}\n\nexport default Home;","import React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useRef } from 'react';\nimport styles from './enroll.module.css';\n\nconst EnrollPost = ({firebase, user, path, post, member, maxMember}) => {\n  const [ checkId, setCheckId ] = useState([]);\n  const [ count, setCount ] = useState([]);\n  const [ postUser, setPostUser ] = useState([]);\n  const [ show, setShow ] = useState({});\n\n  useEffect(()=>{\n    if(!path){\n      return;\n    }\n    const setRef = firebase.setDatabaseRef('subject').child(path).child('member').child(user);\n      firebase.onDatabase(setRef)\n        .then((data)=> {\n          if(!data.exists()){\n            setCheckId(false);\n            return;\n          }\n          setCheckId(true);\n        })\n    const readRef = firebase.setDatabaseRef('user').child(user);\n    firebase.onDatabase(readRef)\n        .then((data) => {\n          const enroll = data.val().enroll_chance;\n          setCount(enroll);\n    })\n\n    const postRef = firebase.setDatabaseRef('subject').child(path).child('postUser');\n    firebase.onDatabase(postRef)\n        .then((data) => {\n          const postUser = data.val();\n          setPostUser(postUser);\n    })\n\n  }, [checkId, firebase, user, path, post])\n\n  useEffect(()=> {\n    if(postUser === user){\n      setShow({\n        display : 'block',\n      });\n      return;\n    }\n    setShow({\n      display : 'none',\n    });\n  }, [postUser, user])\n\n  const userNameValue = useRef();\n  const campusValue = useRef();\n  const yearValue = useRef();\n\n  const handleEnrollUser = () => {\n    const userName = userNameValue.current.value;\n    const campus = campusValue.current.value;\n    const year = yearValue.current.value;\n\n    if(!userName || !campus || !year){\n      alert('정보를 입력해주세요');\n      return;\n    }\n    else {\n      setEnrollUser(userName, campus, year);\n    }\n  }\n  const setEnrollUser = (userName, campus, year) => {\n    const item = {\n      'userName' : userName,\n      'campus' : campus,\n      'year' : year,\n    };\n    if(!checkId && count > 0 && member < maxMember){\n      const setRef = firebase.setDatabaseRef('subject').child(path).child('member').child(user);\n      firebase.setDatabase(setRef, item)\n        .then((data)=>{\n          alert(data);\n          setCheckId(true);\n          clickBtn();\n          updateEnrollChance(true);\n        });\n      return;\n    }\n    else if(count <= 0) {\n      alert('더 이상 등록할 수 없습니다.');\n      return;\n    }\n    else if(member >= maxMember) {\n      alert('정원이 다 되었습니다');\n      return;\n    }\n    alert('이미 등록되어 있습니다.');\n  }\n\n  const handleCancleUser = () => {\n    if(checkId){\n      const setRef = firebase.setDatabaseRef('subject').child(path).child('member').child(user);\n      firebase.removeDatabase(setRef)\n        .then((data)=>{\n          alert(data);\n          setCheckId(false);\n          clickBtn();\n          updateEnrollChance(false);\n        });\n      return;\n    }\n    alert('등록되어 있지 않습니다.');\n  }\n\n  const updateEnrollChance = (select) => {\n    const updataRef = firebase.setDatabaseRef('user').child(user);\n    if(!select){\n      const item = { enroll_chance : count + 1};\n      firebase.updateDatabase(updataRef, item);\n      return;\n    }\n    const item = { enroll_chance : count - 1};\n    firebase.updateDatabase(updataRef, item);\n  }\n\n  const removePostSubject = () => {\n    const setRef = firebase.setDatabaseRef('subject').child(path);\n    const memberRef = firebase.setDatabaseRef('subject').child(path).child('member');\n    firebase.onDatabase(memberRef)\n      .then((data)=>{\n        console.log(data.val());\n      })\n  }\n\n  \n\n  const clickBtn = () => {\n    post();\n  }\n\n  return (\n    <div className={styles.postBox}>\n      <label>\n          이 &emsp; 름 : &ensp;\n          <input type=\"text\" ref={userNameValue} placeholder=\"ex)홍길동\"/>\n        </label>\n        <label>\n          캠 퍼 스 : &ensp;\n          <input type=\"text\" ref={campusValue} placeholder=\"ex)00대학교\"/>\n        </label>\n        <label>\n          학 &emsp; 번 : &ensp;\n          <input type=\"text\" ref={yearValue} placeholder=\"ex)21학번\" / >\n        </label>\n        <div className={styles.btnBox}>\n          <button onClick={handleEnrollUser}>등록하기</button>\n          <button onClick={handleCancleUser}>취소하기</button>\n          <button style={show} onClick={null}>등록명단</button>\n          <button style={show} onClick={removePostSubject}>강의 삭제하기</button>\n        </div>\n    </div>\n  )\n}\n\nexport default EnrollPost;","import React from 'react';\nimport Navbar from '../navbar/navbar';\nimport EnrollPost from './enrollpost';\nimport styles from './enroll.module.css';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\nconst Enroll = ({firebase, user, path, item}) => {\n\n  const [member, setMember] = useState('0');\n  const [post, setPost] = useState(false);\n\n  useEffect(()=> {\n    if(!path){\n      return;\n    }\n    const setRef = firebase.setDatabaseRef('subject').child(path).child('member');\n    firebase.onDatabase(setRef)\n      .then((data) => {\n        if(!data.exists()){\n          setMember(0);\n        }\n        setMember(data.numChildren());\n      })\n    \n    \n  }, [firebase, post, path])\n\n  const onHandlePost = () => {\n    if(!post) {\n      setPost(true);\n    }\n    setPost(false);\n  }\n\n  return (\n    <section className={styles.enrollContainer}>\n      <Navbar \n        firebase={firebase} \n        user={user}\n        title={item.title}\n      />\n      <div className={styles.subjectBox}>\n        <div className={styles.titleBox}>\n          <h1>강의명 : {item.title}</h1>\n        </div>\n        <div className={styles.subTitle}>\n          <h2>강사 : {item.speaker}</h2>\n          <h2>정원 : {member}/{item.maxMember}</h2>\n        </div>\n        <div className={styles.discriptionBox}>\n          <h2>{item.discription}</h2>\n        </div>\n        <EnrollPost\n          firebase={firebase} \n          user={user}\n          path={path}\n          post={onHandlePost}\n          member={member}\n          maxMember={item.maxMember}\n        />\n      </div>\n      \n    </section>\n  )\n}\n\nexport default Enroll;","import React from 'react';\nimport { useRef } from 'react';\nimport { useHistory } from 'react-router';\nimport Navbar from '../navbar/navbar';\nimport styles from './post.module.css'\n\nconst Post = ({firebase, user}) => {\n  const title = useRef();\n  const sperker = useRef();\n  const discription = useRef();\n  const maxMember = useRef();\n  const history = useHistory();\n\n  const handdleSaveBtn = () => {\n    const titleData = title.current.value;\n    const sperkerData = sperker.current.value;\n    const discriptionData = discription.current.value;\n    const maxMemberData = maxMember.current.value;\n    const postUserData = user;\n    \n    firebase.subjectWriteData(titleData, sperkerData, discriptionData, maxMemberData, postUserData)\n    .then((msg)=>{\n      alert(msg);\n      history.push('/class-list');\n    });\n\n  }\n  const handdleCancleBtn = () => {\n    history.goBack();\n  }\n\n  return (\n    <>\n      <Navbar title={'강의등록'} firebase={firebase} user={user}/>\n      <div className={styles.postBox}>\n        <ol>\n          <li className={styles.inputList}>\n            <label>\n              제목\n              <input className={styles.input} name=\"제목\" ref={title} type=\"text\" />\n            </label>\n          </li>\n          <li className={styles.inputList}>\n            <label>\n              강사\n              <input className={styles.input} name=\"제목\" ref={sperker} type=\"text\"/>\n            </label>\n          </li>\n          <li className={styles.inputList}>\n            <label className={styles.labels}>\n              설명\n              <textarea className={styles.textarea} name=\"설명\" ref={discription} cols=\"30\" rows=\"10\"></textarea>\n            </label>\n          </li>\n          <li className={styles.inputList}>\n            <label>\n              정원\n              <input className={styles.input} name=\"정원\" ref={maxMember}></input>\n            </label>\n          </li>\n        </ol>\n      </div>\n      <div className={styles.btnBox}>\n        <button onClick={handdleSaveBtn}>저장</button>\n        <button onClick={handdleCancleBtn}>취소</button>\n      </div>\n    </>\n  )\n}\n\nexport default Post;","import React from 'react';\nimport styles from './subject.module.css';\n\nconst Subject = ({ item, path, enroll }) => {\n\n  const title = item.title;\n  const speaker = item.speaker;\n  const discription = item.discription;\n  const maxMember = item.maxMember;\n  let member = '';\n  \n  if(!item.member){\n    member = 0;\n  }\n  else {\n    const keys = Object.keys(item.member);\n    member = keys.length;\n  }\n\n  const handelPushPath = () => {\n    enroll(path, item);\n  }\n\n  return (\n    <>\n        <li className={styles.contentBox} onClick={handelPushPath}>\n          <div className={styles.titleBox}>\n            <h2>강의명 : {title}</h2>\n          </div>\n          <div className={styles.subtitleBox}>\n            <span>강사 : {speaker}</span>\n            <span>정원 : {member}/{maxMember}</span>\n          </div>\n          <div>{discription}</div>\n        </li>\n    </>\n  )\n}\n\nexport default Subject;","import React, {useState} from 'react';\nimport Navbar from '../navbar/navbar'\nimport Subject from '../subject/subject';\n\nimport { useHistory } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport styles from './classList.module.css';\n\nconst ClassList = ({firebase, user, enroll}) => {\n\n  const title = \"선택특강 리스트\";\n  const [ list, setList ] = useState('');\n  const history = useHistory();\n\n  useEffect(() => {\n    const setRef = firebase.setDatabaseRef('subject');\n    firebase.onDatabase(setRef)\n      .then((subject)=>{\n        const data = subject.val();\n        if(!data) {\n          return;\n        }\n        setList(Object.entries(data));\n    })\n  }, [firebase]);\n\n  const handdlePostPush = () => {\n    history.push('/post');\n  }\n  const onHandleEnroll = (path, item) => {\n    enroll(path, item, list);\n  }\n\n  return(\n    <section className={styles.classListContainer}>\n      <Navbar title={title} firebase={firebase} user={user} />\n      \n      <ul className={styles.classListBox}>\n        {\n          list&&list.map((item) => {\n            return (\n                <Subject \n                  item={item[1]}\n                  key={item[0]} \n                  path={item[0]} \n                  enroll={onHandleEnroll}\n                />\n            )\n          })\n        }\n      </ul>\n      <div className={styles.btnBox}>\n        <button className={styles.subjectRegiste} onClick={handdlePostPush}>강의 등록하기</button>\n      </div>\n    </section>\n  )\n}\n\nexport default ClassList;","import './app.css';\nimport Login from './components/login/login';\nimport Home from './components/home/home';\nimport Enroll from './components/enroll/enroll';\nimport Post from './components/post/post';\nimport ClassList from './components/classList/classList';\nimport { Switch, Route} from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\nfunction App({firebase}) {\n  const history = useHistory();\n  const [ userId, setUserId ] = useState('');\n  const [ path, setPath ] = useState(false);\n  const [ item, setItem ] = useState('');\n\n  useEffect(() => {\n    firebase.authObserver(user => {\n      if(user){\n        setUserId(user.uid);\n        history.push('/class-List');\n      }\n      else{\n        history.push('/');\n      }\n    })\n  }, [firebase, history]);\n\n  const handleEnroll = (path, item) => {\n    setPath(path);\n    setItem(item);\n    history.push(`/enroll`);\n  }\n\n  return (\n    <>\n      <Switch>\n        <Route path=\"/sign-In\">\n          <Login \n            firebase={firebase} \n          />\n        </Route>\n        <Route path=\"/post\">\n          <Post \n            firebase={firebase} \n            user={userId}/>\n        </Route>\n        <Route path={`/enroll`}>\n          <Enroll \n            firebase={firebase} \n            user={userId} \n            path={path} \n            item={item} \n          />\n        </Route>\n        <Route path=\"/class-List\">\n          <ClassList \n            firebase={firebase} \n            user={userId}\n            enroll={handleEnroll}\n          />\n        </Route>\n        <Route path=\"/\" exact={true}>\n          <Home \n            firebase={firebase} \n          />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import firebase from \"firebase/app\";\nimport 'firebase/auth';\nimport 'firebase/database';\n\nexport default class Firebase {\n  firebaseInit () {\n    const firebaseConfig = {\n      apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n      authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n      projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n      appId: process.env.REACT_APP_FIREBASE_APP_ID,\n      measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n      databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n      storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET\n    }\n    firebase.initializeApp(firebaseConfig);\n  };\n\n  //구글 로그인&로그아웃\n\n  googleLogin () {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    return firebase.auth().signInWithPopup(provider);\n  }\n\n  googleLogout () {\n    return firebase.auth().signOut();\n  }\n\n  //유저정보 관찰자\n\n  authObserver(user){\n    return firebase.auth().onAuthStateChanged(user);\n  }\n\n  // 데이터베이스\n\n  setDatabaseRef(ref){\n    return firebase.database().ref(ref);\n  }\n  setDatabase (setRef, item){\n    return new Promise((resolve, reject) => {\n        setRef.set(item);\n        resolve('저장완료');\n      })\n  }\n  removeDatabase (setRef) {\n    return new Promise((resolve, reject)=>{\n      setRef.remove();\n      resolve('강의가 취소되었습니다');\n    })\n  }\n  onDatabase (setRef) {\n    return new Promise((resolve, reject) => {\n      setRef.on('value', (snapshot) => {\n        resolve(snapshot);\n        \n      })\n    })\n  }\n  \n  updateDatabase (setRef, item) {\n    return new Promise((resolve, reject) => {\n      const update = setRef.update(item);\n      resolve(update);\n      })\n  }\n\n\n  subjectWriteData(title, speaker, discription, maxMember, postUser){\n    const setRef = firebase.database().ref('subject');\n    return new Promise((resolve, reject) => {\n      const newSubjectRef = setRef.push();\n      newSubjectRef.set({\n        title : title,\n        speaker: speaker,\n        discription : discription,\n        maxMember : Number(maxMember),\n        member : 0,\n        postUser : postUser,\n      });\n      resolve('강의가 등록되었습니다');\n    });\n  }\n\n\n  //end\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app.jsx';\nimport Firebase from './service/firebase.js';\nimport {BrowserRouter} from \"react-router-dom\";\n\nconst firebase = new Firebase();\nfirebase.firebaseInit();\n\nReactDOM.render(\n  <React.StrictMode> \n    <BrowserRouter>\n      <App firebase={firebase}/>\n    </BrowserRouter>    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBox\":\"post_postBox__3e93n\",\"labels\":\"post_labels__2ZgcX\",\"inputList\":\"post_inputList__eliQM\",\"input\":\"post_input__E-2Ya\",\"textarea\":\"post_textarea__3Regc\",\"btnBox\":\"post_btnBox__2sQW5\"};"],"sourceRoot":""}